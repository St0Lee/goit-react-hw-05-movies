{"version":3,"file":"static/js/402.83992ed9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieSearch/MovieSearchList/movie-search-list.module.css?4321","webpack://react-homework-template/./src/components/MovieSearch/MovieSearchList/Searchbar/searchbar.module.css?a7b3","components/MovieSearch/MovieSearchList/Searchbar/Searchbar.jsx","components/MovieSearch/MovieSearchList/MovieSearchList.jsx","Pages/MovieSearchPage/MovieSearchPage.jsx","api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-search-list_list__LzRJu\",\"poster\":\"movie-search-list_poster__dFlUT\",\"link\":\"movie-search-list_link__8710Z\",\"title\":\"movie-search-list_title__1CLLs\",\"overview\":\"movie-search-list_overview__uvYwN\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"searchbar_searchForm__5yPVV\",\"form\":\"searchbar_form__J4NZo\",\"searchElements\":\"searchbar_searchElements__6CuYD\",\"button\":\"searchbar_button__0Bwzm\",\"buttonLabel\":\"searchbar_buttonLabel__H5JeV\"};","import { useState, useCallback, useEffect } from \"react\";\nimport styles from \"./searchbar.module.css\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState(\"\");\n  const [previousValue, setPreviousValue] = useState(\"\");\n\n  const storedSearch = localStorage.getItem(\"searchValue\");\n\n  useEffect(() => {\n    if (storedSearch) {\n      setState(storedSearch);\n    }\n  }, [storedSearch]);\n\n  const handleChange = useCallback(({ target }) => {\n    const { value } = target;\n    setState(value);\n  }, []);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (state === previousValue || storedSearch) {\n      alert(`Can't enter identical request.`);\n      return;\n    }\n    if (state.trim() === \"\") {\n        return;\n      }\n    setPreviousValue(state);\n    onSubmit(state.trim());\n    localStorage.setItem(\"searchValue\", state.trim());\n  };\n\n  return (\n    <header className={styles.searchForm}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Find</span>\n        </button>\n        <input\n          value={state}\n          onChange={handleChange}\n          required\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"search\"\n          autoFocus\n          placeholder=\"Enter your request\"\n          className={styles.searchElements}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport styles from \"./movie-search-list.module.css\";\nimport { getMovieBySearch } from \"../../../api/movies\";\nimport Searchbar from './Searchbar/Searchbar';\nimport Loader from 'components/Loader/Loader';\nimport moviePlaceholder from \"../../../images/movie-poster-placeholder.png\";\n\nconst MovieSearchList = () => {\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  \n  const search = searchParams.get('search');\n  \n  useEffect(() => {\n    const storedSearch = localStorage.getItem('searchValue');\n    if (storedSearch && !search) {\n      setSearchParams({ search: storedSearch });\n    }\n  }, [setSearchParams, search]);\n  \n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { data: { results } } = await getMovieBySearch(search);\n        setMovie(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (search) {\n      fetchMovies();\n    }\n  }, [search]);\n\n  const handleSearch = (searchValue) => {\n    setSearchParams({ search: searchValue });\n    localStorage.setItem('searchValue', searchValue);\n    setMovie([]);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearch} initialSearchValue={search} />\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <Loader />}\n      {movie.length > 0 && (\n        <ul className={styles.list}>\n          {movie.map(({ id, title, poster_path }) => (\n            <li key={id} className={styles.wrapper}>\n              <Link to={`/movies/${id}`} state={{ from: location }} className={styles.link}>\n                <img\n                  src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : moviePlaceholder}\n                  alt={title}\n                  className={styles.poster}\n                />\n                <p className={styles.title}>{title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MovieSearchList;\n","import MovieSearchList from \"components/MovieSearch/MovieSearchList/MovieSearchList\";\n\nconst MovieSearchPage = () => {\n    return (\n        <div>\n            <MovieSearchList />\n        </div>\n    )\n}\n\nexport default MovieSearchPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"9d62fa0a2d83c73b042e215c1a6cc958\",\n      }\n})\n\nexport const getTrendingMovies = () => {\n    return instance.get(\"trending/movie/week\")\n};\n\nexport const getMovieById = id => {\n    return instance.get(`movie/${id}`)\n}\n\nexport const getMovieBySearch = search => {\n    return instance.get(`search/movie`, {\n      params: {\n        query: search,\n        page: 1\n      },\n    });\n  };\n\nexport const getMovieCast = id => {\n    return instance.get(`movie/${id}/credits`);\n  };\n  \nexport const getMovieReviews = id => {\n    return instance.get(`movie/${id}/reviews`);\n  };"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","previousValue","setPreviousValue","storedSearch","localStorage","getItem","useEffect","handleChange","useCallback","_ref2","value","target","_jsx","className","styles","children","_jsxs","e","preventDefault","alert","trim","setItem","type","onChange","required","autoComplete","name","autoFocus","placeholder","movie","setMovie","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","search","get","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieBySear","results","_context","prev","next","getMovieBySearch","sent","data","t0","message","finish","stop","apply","arguments","Searchbar","searchValue","initialSearchValue","Loader","length","map","id","title","poster_path","Link","to","concat","from","src","moviePlaceholder","alt","MovieSearchList","instance","axios","baseURL","params","api_key","getTrendingMovies","getMovieById","query","page","getMovieCast","getMovieReviews"],"sourceRoot":""}